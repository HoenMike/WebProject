@inject ApplicationDbContext DbContext
@inject ISnackbar Snackbar
@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor
<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12">
                <MudTextField @bind-Value="newBlog.Title" Label="Title" Required="true" />
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="newBlog.Content" Label="Content" Required="true" Textarea="true" Rows="5" />
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="newBlog.ImageUrl" Label="Image URL" Required="true" />
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" OnClick="AddBlog" Color="Color.Success">Add</MudButton>
        <MudButton OnClick="Cancel" Color="Color.Primary">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    private Blog newBlog = new();

    private async Task AddBlog()
    {
        if (string.IsNullOrWhiteSpace(newBlog.Title) || string.IsNullOrWhiteSpace(newBlog.ImageUrl))
        {
            Snackbar.Add("Title and Image URL cannot be empty", Severity.Error);
            return;
        }

        try
        {
            DbContext.Blogs.Add(newBlog);
            await DbContext.SaveChangesAsync();
            Snackbar.Add("Blog added successfully", Severity.Success);
            MudDialog.Close(DialogResult.Ok(newBlog));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error adding blog: {ex.Message}", Severity.Error);
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
