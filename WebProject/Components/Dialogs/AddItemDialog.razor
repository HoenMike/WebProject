@inject ApplicationDbContext DbContext
@inject ISnackbar Snackbar
@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor

<MudDialog>
  <DialogContent>
    <MudGrid>
      <MudItem xs="12">
        <MudTextField @bind-Value="newItem.Name" Label="Name" Required="true" />
      </MudItem>
      <MudItem xs="12">
        <MudTextField @bind-Value="newItem.Price" Label="Price" Required="true" InputType="InputType.Number" />
      </MudItem>
      <MudItem xs="12">
        <MudTextField @bind-Value="newItem.Description" Label="Description" Required="true" />
      </MudItem>
      <MudItem xs="12">
        <MudTextField @bind-Value="newItem.ImageUrl" Label="Image URL" Required="true" />
      </MudItem>
    </MudGrid>
  </DialogContent>
  <DialogActions>
    <MudButton Variant="Variant.Filled" OnClick="AddItem" Color="Color.Success">Add</MudButton>
    <MudButton OnClick="Cancel" Color="Color.Primary">Cancel</MudButton>
  </DialogActions>
</MudDialog>

@code {
  [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
  private Item newItem = new();

  private async Task AddItem()
  {
    if (string.IsNullOrWhiteSpace(newItem.Name) || string.IsNullOrWhiteSpace(newItem.ImageUrl))
    {
      Snackbar.Add("Name and Image URL cannot be empty", Severity.Error);
      return;
    }

    try
    {
      DbContext.Items.Add(newItem);
      await DbContext.SaveChangesAsync();
      Snackbar.Add("Item added successfully", Severity.Success);
      MudDialog.Close(DialogResult.Ok(newItem));
    }
    catch (Exception ex)
    {
      Snackbar.Add($"Error adding item: {ex.Message}", Severity.Error);
    }
  }

  private void Cancel()
  {
    MudDialog.Cancel();
  }
}