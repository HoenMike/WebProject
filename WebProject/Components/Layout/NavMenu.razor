@using WebProject.Components.Account.Pages
@implements IDisposable
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div class="navigation-container @(isMenuOpen ? "menu-open" : "")">
    <div class="nav-header">
        <MudLink Href="/" Underline="Underline.None" Typo="Typo.h5" Class="nav-title">
            <span class="text-pink">Daily</span><span class="text-black">Store</span>
        </MudLink>
        <div class="mobile-toggle" @onclick="ToggleMenu">
            <MudIcon Icon="@Icons.Material.Filled.Menu" />
        </div>
    </div>

    <div class="mud-navmenu-container py-3" Width="250px" Square="true">
        <MudNavMenu Color="Color.Primary" Bordered="false">
            <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">
                Home
            </MudNavLink>

            <MudNavLink Href="itembrowse" Icon="@Icons.Material.Filled.Search">
                Item Browse
            </MudNavLink>

            <MudNavLink Href="news" Icon="@Icons.Material.Filled.Edit">
                News
            </MudNavLink>

            <MudDivider Class="my-2" />

            <AuthorizeView Roles="Admin">
                <MudNavLink Href="news_management" Icon="@Icons.Material.Filled.EditNote">
                    News Manage
                </MudNavLink>
                <MudNavLink Href="items" Icon="@Icons.Material.Filled.List">
                    Item Manage
                </MudNavLink>
                <MudNavLink Href="/promote_management" Icon="@Icons.Material.Filled.Campaign">
                    Promotes Manage
                </MudNavLink>
            </AuthorizeView>

            <AuthorizeView>
                <MudNavLink Href="assign-roles" Icon="@Icons.Material.Filled.Lock">
                    Role Assign
                </MudNavLink>
            </AuthorizeView>

            <MudDivider Class="my-2" />

            <AuthorizeView>
                <Authorized>
                    <MudNavLink Href="cart" Icon="@Icons.Material.Filled.ShoppingCart">
                        Cart
                    </MudNavLink>
                    <MudNavLink Href="paymentinfo" Icon="@Icons.Material.Filled.CreditCard">
                        Payment Info
                    </MudNavLink>
                    <MudNavLink Href="shippinginfo" Icon="@Icons.Material.Filled.LocalShipping">
                        Shipping Info
                    </MudNavLink>
                </Authorized>
            </AuthorizeView>

            <AuthorizeView>
                <Authorized>
                    <MudNavLink Href="Account/Manage" Icon="@Icons.Material.Filled.Person">
                        @context.User.Identity?.Name
                    </MudNavLink>
                </Authorized>
                <NotAuthorized>
                    <MudNavLink Href="Account/Register" Icon="@Icons.Material.Filled.PersonAdd">
                        Register
                    </MudNavLink>
                    <MudNavLink Href="Account/Login" Icon="@Icons.Material.Filled.Login">
                        Login
                    </MudNavLink>
                </NotAuthorized>
            </AuthorizeView>
        </MudNavMenu>
    </div>
</div>

@code {
    private string? currentUrl;
    private bool isMenuOpen = false;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void ToggleMenu()
    {
        isMenuOpen = !isMenuOpen;
        StateHasChanged();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        // Close menu when navigating on mobile
        isMenuOpen = false;
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}