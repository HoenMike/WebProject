@page "/item-details/{Id:int}"
@inject ApplicationDbContext DbContext
@inject CartService CartService
@inject ISnackbar Snackbar
@using Microsoft.EntityFrameworkCore
@using MudBlazor

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h3">Item Detail</MudText>
        </MudItem>
        <MudItem xs="12">
            @if (item != null)
            {
                <MudGrid>
                    <MudItem xs="12" md="4">
                        <MudCard>
                            <MudCardMedia Image="@item.ThumbnailUrl" Alt="@item.Name" />
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" md="8">
                        <MudCard>
                            <MudCardContent>
                                <MudText Typo="Typo.h4">@item.Name</MudText>
                                <MudText Typo="Typo.subtitle1" Color="Color.Secondary">@item.Price.ToString("C")</MudText>
                                <MudText Typo="Typo.body1">@item.Description</MudText>
                                <MudText Typo="Typo.body2">Stock: @item.StockQuantity</MudText>
                                <MudGrid>
                                    <MudItem xs="12" md="6">
                                        <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                            OnClick="DecreaseQuantity">-</MudButton>
                                        <MudNumericField @bind-Value="buyQuantity" Min="1" Max="@item.StockQuantity" />
                                        <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                            OnClick="IncreaseQuantity">+</MudButton>
                                    </MudItem>
                                    <MudItem xs="12" md="6">
                                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="AddToCart">Add
                                            to cart</MudButton>
                                        <MudButton Variant="Variant.Filled" Color="Color.Tertiary" OnClick="BuyNow">Buy Now
                                        </MudButton>
                                    </MudItem>
                                </MudGrid>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            }
            else
            {
                <MudText Typo="Typo.body1">Item not found</MudText>
            }
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    [Parameter]
    public int Id { get; set; }

    private Item? item;
    private int buyQuantity = 1;

    protected override async Task OnInitializedAsync()
    {
        item = await DbContext.Items.FirstOrDefaultAsync(i => i.Id == Id);
    }

    private void IncreaseQuantity()
    {
        if (buyQuantity < item?.StockQuantity)
        {
            buyQuantity++;
        }
    }

    private void DecreaseQuantity()
    {
        if (buyQuantity > 1)
        {
            buyQuantity--;
        }
    }

    private async Task AddToCart()
    {
        if (item != null)
        {
            try
            {
                await CartService.AddToCartAsync(item, buyQuantity);
                Snackbar.Add($"Added {buyQuantity} {item.Name} to cart", Severity.Success);
            }
            catch (InvalidOperationException ex)
            {
                Snackbar.Add(ex.Message, Severity.Error);
            }
        }
    }

    private async Task BuyNow()
    {
        // Implement buy now functionality
    }
}